#
# Globals
#

global !p

def getArgs(group):
	import re
	word = re.compile('\w+')
	return [i.split(",") for i in word.findall(group) ]

#
# s: The snip Object
# args: The parameter list.
#
def appendJSDocParams(s, args):
	if len(args) > 0:
		#s += " *"
		for i in args:
			s += " * @param {TYPE} " + i[0] + " "

endglobal


#
# Templates
#

snippet f "function" !b
/**
 * ${3:Description...}`!p
snip.rv = ""
appendJSDocParams(snip, getArgs(t[2]))
`
 */
function ${1:name}(${2:args}) {
	$0
}
endsnippet

snippet cl "console.log" !b
console.log(${1:'${2:mgs}'});
endsnippet

snippet for "for loop" !b
for (var ${1:i} = 0; $1 < ${2:len}; $1++) {
	$0
}
endsnippet

# CommonJS Templates

snippet req "require module"
require('${1:module}');$0
endsnippet

snippet mod "module.exports"
module.exports = $0
endsnippet

# ES6 Templates

snippet im "import (es6)"
import ${1:{${2:elements}}} from '${3:module}';
endsnippet

snippet ex "export (es6)"
export $1;$0
endsnippet

snippet exd "export default (es6)"
export default $1;$0
endsnippet

snippet class "class (es6)"
/**
 * ${4:Description...}
 *
 * @class $1
 */
class ${1:ClassName}${2: extends ${3:Subclass}} {
	$0
}
endsnippet

snippet ctr "constructor (es6)"
/**
 * @constructor`!p
snip.rv = ""
appendJSDocParams(snip, getArgs(t[1]))
`
 */
constructor(${1:args}) {
	$0
}
endsnippet

snippet m "method (es6)"
/**
 * ${3:Description...}
 *
 * @method $1`!p snip.rv = ""
appendJSDocParams(snip, getArgs(t[2]))
`
 */
${1:name}(${2:args}) {
	$0
}
endsnippet

# ReactJS Templates

snippet rcl "ReactJS Class (es6)" !b
import React from 'react';

/**
 * ${2:Description...}
 *
 * @class $1
 */
class ${1:ClassName} extends React.Component {

	/**
	 * Render $1.
	 * 
	 * @method render
	 */
	render() {
		$0
	}

}

export default $1;
endsnippet

snippet jsx "@jsx comment" !b
/** @jsx React.DOM */
endsnippet

snippet cwu "componentWillUnmount" !b
/**
 * @method componentWillUnmount
 */
componentWillUnmount() {
	$0
}
endsnippet
